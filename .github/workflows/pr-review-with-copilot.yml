name: Automatic PR Review
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  automatic_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Authenticate and Run GitHub Copilot
        env:
          GITHUB_TOKEN: ${{ secrets.BIBEK_GITHUB_TOKEN }}
        run: |
            gh extension install github/gh-copilot
            export GITHUB_TOKEN=${{ secrets.BIBEK_GITHUB_TOKEN }}

      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.BIBEK_GITHUB_TOKEN }}
        run: |
          echo $GITHUB_TOKEN | gh auth login --with-token

      - name: Get PR Files and Run Copilot
        env:
          GITHUB_TOKEN: ${{ secrets.BIBEK_GITHUB_TOKEN }}
        run: |
          echo "FILES=()" >> $GITHUB_ENV
          gh pr view ${{ github.event.pull_request.number }} --json files --jq '.files[].filename' | while read file; do
            content=$(cat $file)
            suggestion=$(echo "$content" | gh copilot suggest)
            echo "${file//\//_}<<EOF" >> $GITHUB_ENV
            echo "$suggestion" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          done

      - name: Create review comment for each file
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.BIBEK_GITHUB_TOKEN }}
          script: |
            const outputs = Object.entries(process.env).filter(([key, _]) => key.includes('EOF'));
            for (const [key, value] of outputs) {
              const filePath = key.slice(0, -3).replace(/_/g, '/');
              const body = `Review suggestions for \`${filePath}\`:\n\`\`\`\n${value}\n\`\`\``;
              await github.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: body,
                event: 'COMMENT'
              });
            }
            }